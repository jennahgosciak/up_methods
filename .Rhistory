per_lotarea = round(lotarea * 100 / sum(lotarea, na.rm = T)),
per_bldgarea = round(bldgarea * 100 / sum(bldgarea, na.rm = T))) %>%
mutate(across(starts_with("per_"), ~str_c(., "%"))) %>%
select(zonedist1,
numlots, per_numlots,
lotarea, per_lotarea,
bldgarea, per_bldgarea)
}
df_sub %>%
create_lutable() %>%
bind_rows(df %>%
mutate(zonedist1 = "Total") %>%
create_lutable()) %>%
mutate(order = if_else(zonedist1 == "Total", 1, 0)) %>%
arrange(order, -numlots) %>%
select(-"order") %>%
rename_all(~c("Zoning Code", "Number of Lots", "Percentage of Total Number of Lots (%)",
"Lot Area (sf)", "Percentage of Total Lot Area (sf)",
"Building Floor Area (sf)", "Percentage of Total Building Floor Area (sf)")) %>%
mutate(across(c("Number of Lots", "Lot Area (sf)",
"Building Floor Area (sf)"), ~scales::comma(.,
accuracy= 1))) %>%
kbl(align=c(rep('l',times=7))) %>%
kable_styling(position = "left",
latex_options = c("hold_position")) %>%
column_spec(1, width = "15em", bold = TRUE, border_left = TRUE) %>%
column_spec(2:6, width = "7em") %>%
column_spec(7, width = "7em", border_right = TRUE)  %>%
row_spec(0, bold = TRUE)
create_lutable2 <- function(df) {
df %>%
group_by(zonedist1) %>%
summarize(across(c(total_unutilized,
utilized,
max_area_allow), sum, na.rm = T)) %>%
ungroup() %>%
mutate(per_unutil = round(total_unutilized * 100 / sum(total_unutilized, na.rm = T)),
per_util = round(utilized * 100 / sum(utilized, na.rm = T)),
per_max_allow = round(max_area_allow * 100 / sum(max_area_allow, na.rm = T))) %>%
mutate(across(starts_with("per_"), ~str_c(., "%"))) %>%
select(zonedist1, total_unutilized,
per_unutil, utilized,
per_util, max_area_allow,
per_max_allow)
}
df_sub %>%
create_lutable2() %>%
bind_rows(df_sub %>%
mutate(zonedist1 = "Total") %>%
create_lutable2()) %>%
mutate(order = if_else(zonedist1 == "Total", 1, 0)) %>%
arrange(order, -total_unutilized) %>%
select(-"order") %>%
rename_all(~c("Zoning Code", "Total Unutilized FAR (sqft)", "Share of Total Unutilized FAR",
"Total Utilized FAR (sqft)", "Share of Total Utilized FAR (sqft)",
"Total Max Floor Area Allowed (sqft)", "Share of Total Max Floor Area Allowed")) %>%
mutate(across(c("Total Unutilized FAR (sqft)",
"Total Utilized FAR (sqft)",
"Total Max Floor Area Allowed (sqft)"), ~scales::comma(., accuracy = 1))) %>%
kbl(align=c(rep('l',times=7))) %>%
kable_styling(position = "left",
latex_options = c("hold_position")) %>%
column_spec(1, width = "15em", bold = TRUE, border_left = TRUE) %>%
column_spec(2:6, width = "7em") %>%
column_spec(7, width = "7em", border_right = TRUE)  %>%
row_spec(0, bold = TRUE)
df_sub %>%
select(c(total_unutilized, utilized, max_area_allow))
# Important link: http://maps.nyc.gov/doitt/nycitymap/
sel_tracts <- c("232", "234",
"472",
"474",
"476")
df <- tbl(con, "mappluto_21v3") %>%
filter((ct2010 %in% sel_tracts) & borough == "BK") %>%
as.data.frame()
df_sub <- df %>%
mutate(zonedist = str_sub(zonedist1, 1, 1),
commarea = rowSums(select(., c("officearea", "retailarea", "garagearea", "strgearea", "otherarea")), na.rm = T)) %>%
rowwise() %>%
mutate(area_allowed = if_else(zonedist == "R",
residfar * lotarea,
commfar * lotarea),
area_allowed_sp = if_else(is.na(spdist1), 0, max(residfar, commfar, na.rm = T) * lotarea),
max_area_allow = if_else(is.na(spdist1), area_allowed, area_allowed_sp),
unutilized_res = if_else(is.na(spdist1), max(area_allowed - resarea, 0, na.rm = T), 0),
unutilized_comm_man = if_else(is.na(spdist1),
max(area_allowed - commarea - factryarea, 0, na.rm = T), 0),
unutilized_sp = if_else(is.na(spdist1), 0,
max(area_allowed_sp - resarea - commarea - factryarea, 0, na.rm = T)),
total_unutilized = case_when(is.na(spdist1) ~ unutilized_sp,
zonedist == "R" ~ unutilized_res,
TRUE ~ unutilized_comm_man),
utilized = bldgarea,
lotunutilized = if_else(total_unutilized > 0 & !is.na(total_unutilized), "Yes", "No")) %>%
ungroup()
df_sub %>%
tablist_qc(zonedist, zonedist1)
df_sub %>%
select(c(total_unutilized, utilized, max_area_allow))
df_sub %>%
select(c(total_unutilized, utilized, max_area_allow))
df_sub %>%
tablist_qc(total_unutilized, utilized, max_area_allow)
df_sub %>%
select(c(zonedist, total_unutilized, utilized, max_area_allow))
df_sub %>%
filter(zonedist == "C") %>%
select(c(zonedist, total_unutilized, utilized, max_area_allow))
create_lutable <- function(df) {
df %>%
group_by(zonedist1) %>%
summarize(numlots = n(),
lotarea = sum(lotarea, na.rm = T),
bldgarea = sum(bldgarea, na.rm = T)) %>%
ungroup() %>%
mutate(per_numlots = round(numlots * 100 / sum(numlots, na.rm = T)),
per_lotarea = round(lotarea * 100 / sum(lotarea, na.rm = T)),
per_bldgarea = round(bldgarea * 100 / sum(bldgarea, na.rm = T))) %>%
mutate(across(starts_with("per_"), ~str_c(., "%"))) %>%
select(zonedist1,
numlots, per_numlots,
lotarea, per_lotarea,
bldgarea, per_bldgarea)
}
df_sub %>%
create_lutable() %>%
bind_rows(df %>%
mutate(zonedist1 = "Total") %>%
create_lutable()) %>%
mutate(order = if_else(zonedist1 == "Total", 1, 0)) %>%
arrange(order, -numlots) %>%
select(-"order") %>%
rename_all(~c("Zoning Code", "Number of Lots", "Percentage of Total Number of Lots (%)",
"Lot Area (sf)", "Percentage of Total Lot Area (sf)",
"Building Floor Area (sf)", "Percentage of Total Building Floor Area (sf)")) %>%
mutate(across(c("Number of Lots", "Lot Area (sf)",
"Building Floor Area (sf)"), ~scales::comma(.,
accuracy= 1))) %>%
kbl(align=c(rep('l',times=7))) %>%
kable_styling(position = "left",
latex_options = c("hold_position")) %>%
column_spec(1, width = "15em", bold = TRUE, border_left = TRUE) %>%
column_spec(2:6, width = "7em") %>%
column_spec(7, width = "7em", border_right = TRUE)  %>%
row_spec(0, bold = TRUE)
create_lutable2 <- function(df) {
df %>%
group_by(zonedist1) %>%
summarize(across(c(total_unutilized,
utilized,
max_area_allow), sum, na.rm = T)) %>%
ungroup() %>%
mutate(per_unutil = round(total_unutilized * 100 / sum(total_unutilized, na.rm = T)),
per_util = round(utilized * 100 / sum(utilized, na.rm = T)),
per_max_allow = round(max_area_allow * 100 / sum(max_area_allow, na.rm = T))) %>%
mutate(across(starts_with("per_"), ~str_c(., "%"))) %>%
select(zonedist1, total_unutilized,
per_unutil, utilized,
per_util, max_area_allow,
per_max_allow)
}
df_sub %>%
create_lutable2() %>%
bind_rows(df_sub %>%
mutate(zonedist1 = "Total") %>%
create_lutable2()) %>%
mutate(order = if_else(zonedist1 == "Total", 1, 0)) %>%
arrange(order, -total_unutilized) %>%
select(-"order") %>%
rename_all(~c("Zoning Code", "Total Unutilized FAR (sqft)", "Share of Total Unutilized FAR",
"Total Utilized FAR (sqft)", "Share of Total Utilized FAR (sqft)",
"Total Max Floor Area Allowed (sqft)", "Share of Total Max Floor Area Allowed")) %>%
mutate(across(c("Total Unutilized FAR (sqft)",
"Total Utilized FAR (sqft)",
"Total Max Floor Area Allowed (sqft)"), ~scales::comma(., accuracy = 1))) %>%
kbl(align=c(rep('l',times=7))) %>%
kable_styling(position = "left",
latex_options = c("hold_position")) %>%
column_spec(1, width = "15em", bold = TRUE, border_left = TRUE) %>%
column_spec(2:6, width = "7em") %>%
column_spec(7, width = "7em", border_right = TRUE)  %>%
row_spec(0, bold = TRUE)
df_sub <- df %>%
mutate(zonedist = str_sub(zonedist1, 1, 1),
commarea = rowSums(select(., c("officearea", "retailarea", "garagearea", "strgearea", "otherarea")), na.rm = T)) %>%
rowwise() %>%
mutate(area_allowed = if_else(zonedist == "R",
residfar * lotarea,
commfar * lotarea),
area_allowed_sp = if_else(is.na(spdist1), 0, max(residfar, commfar, na.rm = T) * lotarea),
max_area_allow = if_else(is.na(spdist1), area_allowed, area_allowed_sp),
unutilized_res = if_else(is.na(spdist1), max(area_allowed - resarea, 0, na.rm = T), 0),
unutilized_comm_man = if_else(is.na(spdist1),
max(area_allowed - commarea - factryarea, 0, na.rm = T), 0),
unutilized_sp = if_else(is.na(spdist1), 0,
max(area_allowed_sp - resarea - commarea - factryarea, 0, na.rm = T)),
total_unutilized = if_else(is.na(spdist1), if_else(zonedist == "R", unutilized_res, unutilized_comm_man), unutilized_sp),
utilized = bldgarea,
lotunutilized = if_else(total_unutilized > 0 & !is.na(total_unutilized), "Yes", "No")) %>%
ungroup()
df_sub %>%
tablist_qc(zonedist, zonedist1)
df_sub %>%
select(c(total_unutilized, utilized, max_area_allow))
df_sub %>%
select(c(zonedist, total_unutilized, utilized, max_area_allow))
df_sub <- df %>%
mutate(zonedist = str_sub(zonedist1, 1, 1),
commarea = rowSums(select(., c("officearea", "retailarea", "garagearea", "strgearea", "otherarea")), na.rm = T)) %>%
rowwise() %>%
mutate(area_allowed = if_else(zonedist == "R",
residfar * lotarea,
commfar * lotarea),
area_allowed_sp = if_else(is.na(spdist1), 0, max(residfar, commfar, na.rm = T) * lotarea),
max_area_allow = if_else(is.na(spdist1), area_allowed, area_allowed_sp),
unutilized_res = if_else(is.na(spdist1), max(area_allowed - resarea, 0, na.rm = T), 0),
unutilized_comm_man = if_else(is.na(spdist1),
max(area_allowed - commarea - factryarea, 0, na.rm = T), 0),
unutilized_sp = if_else(is.na(spdist1), 0,
max(area_allowed_sp - resarea - commarea - factryarea, 0, na.rm = T)),
total_unutilized = case_when(!is.na(spdist1) ~ unutilized_sp,
zonedist == "R" ~ unutilized_res,
TRUE ~ unutilized_comm_man)
utilized = bldgarea,
df_sub <- df %>%
mutate(zonedist = str_sub(zonedist1, 1, 1),
commarea = rowSums(select(., c("officearea", "retailarea", "garagearea", "strgearea", "otherarea")), na.rm = T)) %>%
rowwise() %>%
mutate(area_allowed = if_else(zonedist == "R",
residfar * lotarea,
commfar * lotarea),
area_allowed_sp = if_else(is.na(spdist1), 0, max(residfar, commfar, na.rm = T) * lotarea),
max_area_allow = if_else(is.na(spdist1), area_allowed, area_allowed_sp),
unutilized_res = if_else(is.na(spdist1), max(area_allowed - resarea, 0, na.rm = T), 0),
unutilized_comm_man = if_else(is.na(spdist1),
max(area_allowed - commarea - factryarea, 0, na.rm = T), 0),
unutilized_sp = if_else(is.na(spdist1), 0,
max(area_allowed_sp - resarea - commarea - factryarea, 0, na.rm = T)),
total_unutilized = case_when(!is.na(spdist1) ~ unutilized_sp,
zonedist == "R" ~ unutilized_res,
TRUE ~ unutilized_comm_man),
utilized = bldgarea,
lotunutilized = if_else(total_unutilized > 0 & !is.na(total_unutilized), "Yes", "No")) %>%
ungroup()
df_sub %>%
tablist_qc(zonedist, zonedist1)
df_sub %>%
select(c(zonedist, total_unutilized, utilized, max_area_allow))
df_sub %>%
select(c(unutilized_res, area_allowed - resarea))
df_sub %>%
select(c(unutilized_res, area_allowed, resarea))
df_sub %>%
select(c(unutilized_res, area_allowed, resarea)) %>%
mutate(check = area_allowed - resarea)
df_sub %>%
select(c(area_allowed_sp, residfar, commfar))
df_sub %>%
verify(area_allowed_sp == 0)
df_sub %>%
assertr::verify(area_allowed_sp == 0)
stopifnot(length(unique(df$ct2020))==5)
unique(df$ct2020)
df
df$ct2010
unique(df$ct2010)
stopifnot(length(unique(df$ct2010)) == 5)
df_sub %>%
select(c(area_allowed, residfar, lotarea))
df_sub %>%
select(c(area_allowed, residfar, lotarea)) %>%
mutate(check = residfar * lotarea)
df_sub %>%
select(c(area_allowed, residfar, lotarea)) %>%
rowwise() %>%
mutate(check = residfar * lotarea)
df_sub %>%
select(c(area_allowed, residfar, lotarea, zonedist)) %>%
rowwise() %>%
mutate(check = residfar * lotarea)
df_sub %>%
select(c(unutilized_comm_man, area_allowed, commarea, factryarea)) %>%
filter(unutilized_comm_man > 0)
df_sub %>%
select(c(unutilized_comm_man, area_allowed, commarea, factryarea)) %>%
filter(commarea > 0)
df_sub %>%
filter(max_area_allow < utilized)
df_sub %>%
filter(max_area_allow < utilized) %>%
filter("zonedist", matches("area"))
df_sub %>%
filter(max_area_allow < utilized) %>%
select("zonedist", matches("area"))
df_sub %>%
filter(max_area_allow < utilized) %>%
select("zonedist", "bldgarea", matches("area"))
df_sub %>%
filter(max_area_allow < utilized) %>%
select("zonedist", "bldgarea", "residfar", "lotarea", matches("area"))
df_sub %>%
filter(max_area_allow < utilized) %>%
mutate(check = residfar * lotarea) %>%
select("zonedist", "bldgarea", "residfar", "lotarea", check, matches("area"))
df_sub %>%
filter(max_area_allow < utilized) %>%
mutate(check = residfar * lotarea) %>%
select("zonedist", "bldgarea", "residfar", "lotarea", "max_area_allow", check, matches("area"))
df_sub %>%
filter(max_area_allow < utilized) %>%
mutate(check = residfar * lotarea) %>%
select("zonedist", "bldgarea", "residfar", "lotarea", "max_area_allow", check, "yearbuilt", matches("area"))
library(tidyverse)
library(tidycensus)
library(fs)
library(DBI)
library(dbplyr)
library(RPostgres)
library(knitr)
library(kableExtra)
con <- dbConnect(Postgres(),
user = "furmandata",
password = rstudioapi::askForPassword(),
host = "fcdata.c7h93yqbqnvu.us-east-1.rds.amazonaws.com",
port = 5432,
dbname = "fcdata",
bigint = "integer"
)
source("../99_common.R")
# Important link: http://maps.nyc.gov/doitt/nycitymap/
sel_tracts <- c("232", "234",
"472",
"474",
"476")
df <- tbl(con, "mappluto_21v3") %>%
filter((ct2010 %in% sel_tracts) & borough == "BK") %>%
as.data.frame()
df_sub <- df %>%
mutate(zonedist = str_sub(zonedist1, 1, 1),
commarea = rowSums(select(., c("officearea", "retailarea",
"garagearea", "strgearea",
"otherarea")), na.rm = T)) %>%
rowwise() %>%
mutate(area_allowed = if_else(zonedist == "R",
residfar * lotarea,
commfar * lotarea),
area_allowed_sp = if_else(is.na(spdist1), 0,
max(residfar, commfar, na.rm = T) * lotarea),
max_area_allow = if_else(is.na(spdist1), area_allowed, area_allowed_sp),
unutilized_res = if_else(is.na(spdist1), max(area_allowed - resarea,
0, na.rm = T), 0),
unutilized_comm_man = if_else(is.na(spdist1),
max(area_allowed - commarea - factryarea,
0, na.rm = T), 0),
unutilized_sp = if_else(is.na(spdist1), 0,
max(area_allowed_sp - resarea - commarea - factryarea,
0, na.rm = T)),
total_unutilized = case_when(!is.na(spdist1) ~ unutilized_sp,
zonedist == "R" ~ unutilized_res,
TRUE ~ unutilized_comm_man),
utilized = bldgarea,
lotunutilized = if_else(total_unutilized > 0 & !is.na(total_unutilized), "Yes", "No")) %>%
ungroup()
df_sub %>%
tablist_qc(zonedist, zonedist1)
df_sub %>%
select(c(zonedist, total_unutilized, utilized, max_area_allow))
df_sub %>%
select(c(unutilized_res, area_allowed, resarea)) %>%
mutate(check = area_allowed - resarea)
df_sub %>%
select(c(unutilized_comm_man, area_allowed, commarea, factryarea)) %>%
filter(commarea > 0)
df_sub %>%
select(c(area_allowed, residfar, lotarea, zonedist)) %>%
rowwise() %>%
mutate(check = residfar * lotarea)
df_sub %>%
assertr::verify(area_allowed_sp == 0)
stopifnot(length(unique(df$ct2010)) == 5)
df_sub %>%
filter(max_area_allow < utilized) %>%
mutate(check = residfar * lotarea) %>%
select("zonedist", "bldgarea", "residfar", "lotarea", "max_area_allow", check, "yearbuilt", matches("area"))
create_lutable <- function(df) {
df %>%
group_by(zonedist1) %>%
summarize(numlots = n(),
lotarea = sum(lotarea, na.rm = T),
bldgarea = sum(bldgarea, na.rm = T)) %>%
ungroup() %>%
mutate(per_numlots = round(numlots * 100 / sum(numlots, na.rm = T)),
per_lotarea = round(lotarea * 100 / sum(lotarea, na.rm = T)),
per_bldgarea = round(bldgarea * 100 / sum(bldgarea, na.rm = T))) %>%
mutate(across(starts_with("per_"), ~str_c(., "%"))) %>%
select(zonedist1,
numlots, per_numlots,
lotarea, per_lotarea,
bldgarea, per_bldgarea)
}
df_sub %>%
create_lutable() %>%
bind_rows(df %>%
mutate(zonedist1 = "Total") %>%
create_lutable()) %>%
mutate(order = if_else(zonedist1 == "Total", 1, 0)) %>%
arrange(order, -numlots) %>%
select(-"order") %>%
rename_all(~c("Zoning Code", "Number of Lots", "Percentage of Total Number of Lots (%)",
"Lot Area (sf)", "Percentage of Total Lot Area (sf)",
"Building Floor Area (sf)", "Percentage of Total Building Floor Area (sf)")) %>%
mutate(across(c("Number of Lots", "Lot Area (sf)",
"Building Floor Area (sf)"), ~scales::comma(.,
accuracy= 1))) %>%
kbl(align=c(rep('l',times=7))) %>%
kable_styling(position = "left",
latex_options = c("hold_position")) %>%
column_spec(1, width = "15em", bold = TRUE, border_left = TRUE) %>%
column_spec(2:6, width = "7em") %>%
column_spec(7, width = "7em", border_right = TRUE)  %>%
row_spec(0, bold = TRUE)
create_lutable2 <- function(df) {
df %>%
group_by(zonedist1) %>%
summarize(across(c(total_unutilized,
utilized,
max_area_allow), sum, na.rm = T)) %>%
ungroup() %>%
mutate(per_unutil = round(total_unutilized * 100 / sum(total_unutilized, na.rm = T)),
per_util = round(utilized * 100 / sum(utilized, na.rm = T)),
per_max_allow = round(max_area_allow * 100 / sum(max_area_allow, na.rm = T))) %>%
mutate(across(starts_with("per_"), ~str_c(., "%"))) %>%
select(zonedist1, total_unutilized,
per_unutil, utilized,
per_util, max_area_allow,
per_max_allow)
}
df_sub %>%
create_lutable2() %>%
bind_rows(df_sub %>%
mutate(zonedist1 = "Total") %>%
create_lutable2()) %>%
mutate(order = if_else(zonedist1 == "Total", 1, 0)) %>%
arrange(order, -total_unutilized) %>%
select(-"order") %>%
rename_all(~c("Zoning Code", "Total Unutilized FAR (sqft)", "Share of Total Unutilized FAR",
"Total Utilized FAR (sqft)", "Share of Total Utilized FAR (sqft)",
"Total Max Floor Area Allowed (sqft)", "Share of Total Max Floor Area Allowed")) %>%
mutate(across(c("Total Unutilized FAR (sqft)",
"Total Utilized FAR (sqft)",
"Total Max Floor Area Allowed (sqft)"), ~scales::comma(., accuracy = 1))) %>%
kbl(align=c(rep('l',times=7))) %>%
kable_styling(position = "left",
latex_options = c("hold_position")) %>%
column_spec(1, width = "15em", bold = TRUE, border_left = TRUE) %>%
column_spec(2:6, width = "7em") %>%
column_spec(7, width = "7em", border_right = TRUE)  %>%
row_spec(0, bold = TRUE)
df_sub %>%
filter(max_area_allow < utilized) %>%
mutate(check = residfar * lotarea) %>%
select("zonedist", "bldgarea", "residfar", "lotarea", "max_area_allow", check, "yearbuilt", matches("area"))
df_sub %>%
filter(max_area_allow < utilized) %>%
mutate(check = residfar * lotarea) %>%
select("zonedist", "bldgarea", "residfar", "lotarea", "max_area_allow", "unutilized_res", check, "yearbuilt", matches("area"))
df_sub %>%
filter(max_area_allow < utilized) %>%
mutate(check = residfar * lotarea) %>%
select("zonedist", "bldgarea", "residfar", "lotarea", "max_area_allow", "unutilized_res",  "resarea", check, "yearbuilt", matches("area"))
create_lutable2 <- function(df) {
df %>%
group_by(zonedist1) %>%
summarize(across(c(total_unutilized,
utilized,
max_area_allow), sum, na.rm = T)) %>%
ungroup() %>%
mutate(per_unutil = round(total_unutilized * 100 / sum(total_unutilized, na.rm = T)),
per_util = round(utilized * 100 / sum(utilized, na.rm = T)),
per_max_allow = round(max_area_allow * 100 / sum(max_area_allow, na.rm = T))) %>%
mutate(across(starts_with("per_"), ~str_c(., "%"))) %>%
select(zonedist1, total_unutilized,
per_unutil, utilized,
per_util, max_area_allow,
per_max_allow)
}
df_sub %>%
create_lutable2() %>%
bind_rows(df_sub %>%
mutate(zonedist1 = "Total") %>%
create_lutable2()) %>%
mutate(order = if_else(zonedist1 == "Total", 1, 0)) %>%
arrange(order, -total_unutilized) %>%
select(-"order") %>%
rename_all(~c("Zoning Code", "Total Unutilized FAR (sqft)", "Share of Total Unutilized FAR",
"Total Utilized FAR (sqft)", "Share of Total Utilized FAR (sqft)",
"Total Max Floor Area Allowed (sqft)", "Share of Total Max Floor Area Allowed")) %>%
mutate(across(c("Total Unutilized FAR (sqft)",
"Total Utilized FAR (sqft)",
"Total Max Floor Area Allowed (sqft)"), ~scales::comma(., accuracy = 1))) %>%
kbl(align=c(rep('l',times=7))) %>%
kable_styling(position = "left",
latex_options = c("hold_position")) %>%
column_spec(1, width = "15em", bold = TRUE, border_left = TRUE) %>%
column_spec(2:6, width = "7em") %>%
column_spec(7, width = "7em", border_right = TRUE)  %>%
row_spec(0, bold = TRUE)
df_sub %>%
filter(max_area_allow < utilized) %>%
mutate(check = residfar * lotarea) %>%
select("zonedist1", "bldgarea", "residfar", "lotarea", "max_area_allow", "unutilized_res",  "resarea", check, "yearbuilt", matches("area"))
