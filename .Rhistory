<<<<<<< HEAD
mutate(tract_name = "Average")
)
df_full %>%
filter(variable == "med_hhinc")  %>%
bind_rows(
df_full %>%
group_by(year) %>%
filter(variable == "med_hhinc") %>%
summarize(estimate = mean(estimate, na.rm = T)) %>%
mutate(tract_name = "Average")
) %>%
ggplot() +
geom_line(aes(year,
estimate, color = tract_name)) +
theme_classic() +
scale_x_continuous(breaks = c(2014, 2019),
labels = c("2010-2014","2015-2019"))
df_full %>%
filter(variable == "med_hhinc")  %>%
bind_rows(
df_full %>%
group_by(year) %>%
filter(variable == "med_hhinc") %>%
summarize(estimate = mean(estimate, na.rm = T)) %>%
mutate(tract_name = "Average")
) %>%
ggplot() +
geom_line(aes(year,
estimate, color = tract_name)) +
theme_classic() +
scale_x_continuous(breaks = c(2014, 2019),
labels = c("2010-2014","2015-2019"))+
scale_y_continuous(label=scales::comma) +
scale_color_manual(values = colors,
name = "Tract Name") +
labs(x = "ACS 5-Year Survey",
y = "Median Household Income ($)")
df_full %>%
filter(variable == "med_hhinc")  %>%
bind_rows(
df_full %>%
group_by(year) %>%
filter(variable == "med_hhinc") %>%
summarize(estimate = mean(estimate, na.rm = T)) %>%
mutate(tract_name = "Average")
) %>%
ggplot() +
geom_line(aes(year,
estimate, color = tract_name)) +
theme_classic() +
scale_x_continuous(breaks = c(2014, 2019),
labels = c("2010-2014","2015-2019"))+
scale_y_continuous(label=scales::comma) +
# scale_color_manual(values = colors,
#                    name = "Tract Name") +
labs(color = "Tract Name") +
labs(x = "ACS 5-Year Survey",
y = "Median Household Income ($)")
ggsave(path("02_output", "median_hhinc.png"))
df_09 <- get_acs(geography = "tract",
variable  = varlist[c(1:20, 40:(length(varlist) - 7))],
state = "NY",
county = "047",
year = 2009) %>%
mutate(year = 2009)
df_09 <- get_acs(geography = "tract",
variable  = varlist[c(40:(length(varlist) - 7))],
state = "NY",
county = "047",
year = 2009) %>%
mutate(year = 2009)
df_full <- rbind(df_19, df_14, df_09) %>%
filter(GEOID %in% sel_tracts) %>%
mutate(year_lab = case_when(year == 2014 ~ "2010-2014",
year == 2019 ~ "2015-2019"),
year_lab = factor(year_lab,
levels = c("2010-2014", "2015-2019"),
ordered = T),
tract_name = str_replace_all(NAME, ", Kings County, New York",""))
label_det <- vars$label_det
label <- vars$label
vars_order <- vars %>%
filter(str_detect(label, "female")) %>%
filter(label != "female_total") %>%
pull(label_det)
stopifnot(length(label) == length(label_det))
df_full %>%
filter(year == 2019) %>%
filter(str_detect(variable, "male")) %>%
filter(!(variable %in% c("male_total", "female_total"))) %>%
group_by(variable) %>%
summarize(estimate = sum(estimate, na.rm = T)) %>%
ungroup() %>%
mutate(per = estimate * 100 / sum(estimate, na.rm = T)) %>%
mutate(gender = if_else(str_detect(variable, "female"), "Female", "Male"),
age_cat = factor(label_det[match(variable, label)],
levels = vars_order,
ordered = T))
df_19 %>%
filter(str_detect(variable, "male")) %>%
filter(!(variable %in% c("male_total", "female_total"))) %>%
group_by(variable) %>%
summarize(estimate = sum(estimate, na.rm = T)) %>%
ungroup() %>%
mutate(per = estimate * 100 / sum(estimate, na.rm = T)) %>%
mutate(gender = if_else(str_detect(variable, "female"), "Female", "Male"),
age_cat = factor(label_det[match(variable, label)],
levels = vars_order,
ordered = T))
# %>%
#   filter(age_cat %in% c("10 to 14 years", "Under 5 years", "5 to 9 years",
#                         "15 to 17 years", "18 and 19 years")) %>%
#   summarize(per = sum(per, na.rm = T))
df_full %>%
filter(year == 2019) %>%
filter(str_detect(variable, "male")) %>%
filter(!(variable %in% c("male_total", "female_total"))) %>%
group_by(variable) %>%
summarize(estimate = sum(estimate, na.rm = T)) %>%
ungroup() %>%
mutate(per = estimate * 100 / sum(estimate, na.rm = T)) %>%
mutate(gender = if_else(str_detect(variable, "female"), "Female", "Male"),
age_cat = factor(label_det[match(variable, label)],
levels = vars_order,
ordered = T)) %>%
mutate(per = if_else(gender == "Male", -1*per, per)) %>%
ggplot() +
geom_col(aes(age_cat, per, fill = gender)) +
coord_flip() +
theme_classic() +
labs(y = "Percent of total population",
x = "") +
scale_fill_manual(name = "",
values = colors,
guide = guide_legend(reverse=TRUE)) +
scale_y_continuous(breaks = c(-7.5, -5, -2.5, 0, 2.5, 5, 7.5),
labels = c("-7.5%", "-5%", "-2.5%", "0%", "2.5%",
"5%", "7.5%")) +
theme(legend.position="bottom")
ggsave(path("02_output", "population_pyramid.png"))
library(magrittr)
df_full %>%
filter(variable == "nhpi_race") %>%
pull(estimate) %>%
equals(0) %>%
all() %>%
stopifnot()
df_full %>%
filter(variable == "nhpi_race", year == 2019) %>%
pull(estimate) %>%
equals(0) %>%
all() %>%
stopifnot()
total <- df_full %>%
filter(variable == "total_race") %>%
filter(year == 2019) %>%
summarize(estimate = sum(estimate, na.rm = T)) %>%
verify(nrow(.) == 1) %>%
pull(estimate)
df_full %>%
filter(str_detect(variable, "_race")) %>%
filter(!(variable %in% c("total_race", "multoth_race", "multnoth_race"))) %>%
filter(year == 2019) %>%
mutate(raceeth_lab = case_when(variable == "black_race" ~ "Black or\nAfrican American",
variable == "aian_race" ~ "American Indian or\nAlaskan Native",
variable == "nhpi_race" ~ "Native Hawaiian or\nPacific Islander",
variable == "asian_race" ~ "Asian",
variable == "white_race" ~ "White",
variable == "oth_race" ~ "Other race",
variable == "mult_race" ~ "Two or more races",
variable == "hisp_eth" ~ "Hispanic or Latinx",
TRUE ~ NA_character_),
raceeth_lab = factor(raceeth_lab, levels = c("Black or\nAfrican American",
"Hispanic or Latinx",
"Asian",
"White",
"Native Hawaiian or\nPacific Islander",
"American Indian or\nAlaskan Native",
"Two or more races",
"Other race"),
ordered = T)) %>%
assertr::verify(!is.na(raceeth_lab))  %>%
group_by(raceeth_lab) %>%
summarize(estimate = sum(estimate, na.rm = T)) %>%
mutate(per = round(estimate * 100 / total)) %>%
ungroup() %>%
arrange(desc(raceeth_lab)) %>%
mutate(ypos = cumsum(per)- 0.5*per) %>%
ggplot(aes(x="", y=per, fill=raceeth_lab))+
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
geom_text(aes(label = if_else(per > 1, per, NA_real_)),
position = position_stack(vjust = 0.5)) +
scale_fill_manual(values = colors[c(2,1,3:length(colors))],
name = "")
ggsave(path("02_output", "race_2019.png"))
total <- df_full %>%
filter(variable == "total_eth") %>%
filter(year == 2019) %>%
summarize(estimate = sum(estimate, na.rm = T)) %>%
verify(nrow(.) == 1) %>%
pull(estimate)
df_full %>%
filter(str_detect(variable, "_eth")) %>%
filter(!(variable %in% c("total_eth"))) %>%
filter(year == 2019) %>%
mutate(eth_lab = case_when(variable == "nothisp_eth" ~ "Not Hispanic or Latinx",
variable == "hisp_eth" ~ "Hispanic or Latinx",
TRUE ~ NA_character_),
eth_lab = factor(eth_lab, levels = c("Not Hispanic or Latinx",
"Hispanic or Latinx"),
ordered = T)) %>%
assertr::verify(!is.na(eth_lab))  %>%
group_by(eth_lab) %>%
summarize(estimate = sum(estimate, na.rm = T)) %>%
mutate(per = round(estimate * 100 / total)) %>%
ungroup() %>%
arrange(desc(eth_lab)) %>%
mutate(ypos = cumsum(per)- 0.5*per) %>%
ggplot(aes(x="", y=per, fill=eth_lab))+
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
geom_text(aes(label = if_else(per > 1, per, NA_real_)),
position = position_stack(vjust = 0.5),
color = "white") +
scale_fill_manual(values = colors,
name = "")
ggsave(path("02_output", "eth_2019.png"))
## how did the population change over the past
df_full %>%
filter(variable == "total") %>%
group_by(year) %>%
summarize(estimate = sum(estimate, na.rm = T)) %>%
ungroup() %>%
ggplot(aes(year, estimate)) +
geom_line(color = colors[1]) +
theme_classic() +
scale_y_continuous(limits = c(0, 23000),
label=scales::comma) +
scale_x_continuous(breaks = c(2009, 2014, 2019),
labels = c("2005-2009", "2010-2014",
"2015-2019")) +
labs(x = "ACS 5-Year Survey",
y = "Number of People")
ggsave(path("02_output", "population_time.png"))
df_full %>%
filter(variable == "total")
## how did the population change over the past
df_full %>%
filter(variable == "total_race") %>%
group_by(year) %>%
summarize(estimate = sum(estimate, na.rm = T)) %>%
ungroup() %>%
ggplot(aes(year, estimate)) +
geom_line(color = colors[1]) +
theme_classic() +
scale_y_continuous(limits = c(0, 23000),
label=scales::comma) +
scale_x_continuous(breaks = c(2009, 2014, 2019),
labels = c("2005-2009", "2010-2014",
"2015-2019")) +
labs(x = "ACS 5-Year Survey",
y = "Number of People")
ggsave(path("02_output", "population_time.png"))
df_full %>%
filter(variable == "total_race")
## how did the population change over the past
df_full %>%
filter(variable == "total_race") %>%
group_by(year) %>%
summarize(estimate = sum(estimate, na.rm = T)) %>%
ungroup() %>%
ggplot(aes(year, estimate)) +
geom_line(color = colors[1])
## how did the population change over the past
df_full %>%
filter(variable == "total_race") %>%
group_by(year) %>%
summarize(estimate = sum(estimate, na.rm = T)) %>%
ungroup() %>%
ggplot(aes(year, estimate)) +
geom_line(color = colors[1]) +
theme_classic() +
scale_y_continuous(limits = c(0, 35000),
label=scales::comma) +
scale_x_continuous(breaks = c(2009, 2014, 2019),
labels = c("2005-2009", "2010-2014",
"2015-2019")) +
labs(x = "ACS 5-Year Survey",
y = "Number of People")
## how did the population change over the past
df_full %>%
filter(variable == "total_race") %>%
group_by(year) %>%
summarize(estimate = sum(estimate, na.rm = T)) %>%
ungroup() %>%
ggplot(aes(year, estimate)) +
geom_line(color = colors[1]) +
theme_classic() +
scale_y_continuous(limits = c(0, 35000),
label=scales::comma) +
scale_x_continuous(breaks = c(2009, 2014, 2019),
labels = c("2005-2009", "2010-2014",
"2015-2019")) +
labs(x = "ACS 5-Year Survey",
y = "Number of People")
ggsave(path("02_output", "population_time.png"))
df_full %>%
filter(variable == "total_race") %>%
group_by(year) %>%
summarize(estimate = sum(estimate, na.rm =T))
pop_2020 <- df_full %>%
filter(variable == "total_race") %>%
filter(year == 2019) %>%
assertr::verify(nrow(.) == 5) %>%
summarize(estimate = sum(estimate, na.rm = T)) %>%
pull(estimate)
df_full %>%
filter(variable == "total_race") %>%
group_by(year) %>%
summarize(estimate = sum(estimate, na.rm =T))
pop_2020 <- df_full %>%
filter(variable == "total_race") %>%
filter(year == 2019) %>%
summarize(estimate = sum(estimate, na.rm = T)) %>%
pull(estimate)
pop_2020
pop_2040 <- 18663 * (1.04)  * (1.031)
pop_2040
round(pop_2040 - pop_2020)
pop_2040 <- pop_2020 * (1.04)  * (1.031)
pop_2040
round(pop_2040 - pop_2020)
df_full %>%
filter(variable == "med_hhinc")  %>%
bind_rows(
df_full %>%
group_by(year) %>%
filter(variable == "med_hhinc") %>%
summarize(estimate = mean(estimate, na.rm = T)) %>%
mutate(tract_name = "Average")
) %>%
ggplot() +
geom_line(aes(year,
estimate, color = tract_name)) +
theme_classic() +
scale_x_continuous(breaks = c(2014, 2019),
labels = c("2010-2014","2015-2019"))+
scale_y_continuous(label=scales::comma) +
# scale_color_manual(values = colors,
#                    name = "Tract Name") +
labs(color = "Tract Name") +
labs(x = "ACS 5-Year Survey",
y = "Median Household Income ($)")
ggsave(path("02_output", "median_hhinc.png"))
df_full %>%
filter(variable == "med_hhinc")  %>%
bind_rows(
df_full %>%
group_by(year) %>%
filter(variable == "med_hhinc") %>%
summarize(estimate = mean(estimate, na.rm = T)) %>%
mutate(tract_name = "Average")
) %>%
ggplot() +
geom_line(aes(year,
estimate, color = tract_name)) +
theme_classic() +
scale_x_continuous(breaks = c(2009, 2014, 2019),
labels = c("2005-2009", "2010-2014","2015-2019"))+
scale_y_continuous(label=scales::comma) +
# scale_color_manual(values = colors,
#                    name = "Tract Name") +
labs(color = "Tract Name") +
labs(x = "ACS 5-Year Survey",
y = "Median Household Income ($)")
ggsave(path("02_output", "median_hhinc.png"))
df_full %>%
group_by(year_lab, variable) %>%
summarize(estimate = sum(estimate, na.rm = T)) %>%
filter(variable %in% c("hh_oo",
"hh_ro",
"total_hh")) %>%
pivot_wider(id_cols = c("year_lab"),
names_from = "variable",
values_from = "estimate") %>%
mutate(per_oo = round(100 * hh_oo / total_hh),
per_ro = round(100 * hh_ro / total_hh)) %>%
pivot_longer(cols = c("per_oo", "per_ro")) %>%
mutate(desc = if_else(name == "per_oo", "Owner occupied", "Renter occupied")) %>%
ggplot(aes(year_lab, value, fill = desc, group = desc)) +
geom_col() +
geom_text(aes(label = str_c(value, "%")), position = "stack",
vjust = 1.5, color = "white") +
theme_classic() +
scale_fill_manual(values = colors, name = "") +
labs(x = "ACS 5-Year Survey",
y = "Share of Total Households")
ggsave(path("02_output", "share_hh.png"))
df_full <- rbind(df_19, df_14, df_09) %>%
filter(GEOID %in% sel_tracts) %>%
mutate(year_lab = case_when(year == 2014 ~ "2010-2014",
year == 2019 ~ "2015-2019",
year == 2009 ~ "2005-2009"),
year_lab = factor(year_lab,
levels = c("2005-2009", "2010-2014", "2015-2019"),
ordered = T),
tract_name = str_replace_all(NAME, ", Kings County, New York",""))
df_full %>%
group_by(year_lab, variable) %>%
summarize(estimate = sum(estimate, na.rm = T)) %>%
filter(variable %in% c("hh_oo",
"hh_ro",
"total_hh")) %>%
pivot_wider(id_cols = c("year_lab"),
names_from = "variable",
values_from = "estimate") %>%
mutate(per_oo = round(100 * hh_oo / total_hh),
per_ro = round(100 * hh_ro / total_hh)) %>%
pivot_longer(cols = c("per_oo", "per_ro")) %>%
mutate(desc = if_else(name == "per_oo", "Owner occupied", "Renter occupied")) %>%
ggplot(aes(year_lab, value, fill = desc, group = desc)) +
geom_col() +
geom_text(aes(label = str_c(value, "%")), position = "stack",
vjust = 1.5, color = "white") +
theme_classic() +
scale_fill_manual(values = colors, name = "") +
labs(x = "ACS 5-Year Survey",
y = "Share of Total Households")
ggsave(path("02_output", "share_hh.png"))
df_full %>%
group_by(year_lab, variable) %>%
summarize(estimate = sum(estimate, na.rm = T)) %>%
filter(variable %in% c("hh_oo",
"hh_ro",
"total_hh")) %>%
pivot_wider(id_cols = c("year_lab"),
names_from = "variable",
values_from = "estimate") %>%
mutate(per_oo = round(100 * hh_oo / total_hh),
per_ro = round(100 * hh_ro / total_hh)) %>%
pivot_longer(cols = c("per_oo", "per_ro")) %>%
mutate(desc = if_else(name == "per_oo", "Owner occupied", "Renter occupied")) %>%
ggplot(aes(year_lab, value, fill = desc, group = desc)) +
geom_col() +
geom_text(aes(label = str_c(value, "%")), position = "stack",
vjust = 1.5, color = "white") +
theme_classic() +
scale_fill_manual(values = colors, name = "") +
labs(x = "ACS 5-Year Survey",
y = "Share of Total Households")
ggsave(path("02_output", "share_hh.png"))
df_full %>%
filter(variable %in% c("same_hh", "total_hh_move")) %>%
select(-"moe") %>%
pivot_wider(id_cols = -c("variable"), names_from = "variable", values_from = "estimate") %>%
mutate(moved_hh = total_hh_move - same_hh) %>%
pivot_longer(cols = c("moved_hh", "same_hh")) %>%
group_by(year_lab, name) %>%
summarize(estimate = sum(value, na.rm = T)) %>%
group_by(year_lab) %>%
mutate(per = estimate * 100 / sum(estimate, na.rm = T)) %>%
ungroup() %>%
mutate(var_lab = case_when(name == "same_hh" ~ "Same house 1 year ago",
name == "moved_hh" ~ "Moved since 1 year ago",
TRUE ~ NA_character_)) %>%
ggplot(aes(year_lab, per, fill = var_lab)) +
geom_col() +
labs(x = "ACS 5-Year Survey",
y = "Percent of all households",
fill = "") +
geom_text(aes(label = str_c(round(per), "%")), position = "stack",
vjust = 1.1, color = "white") +
theme_classic() +
scale_fill_manual(values = colors)
ggsave(path("02_output", "movement.png"))
df_full %>%
filter(variable %in% c("same_hh", "total_hh_move"))
df_full %>%
filter(variable %in% c("same_hh", "total_hh_move"))
df_full %>%
filter(variable %in% c("same_hh"))
df_full %>%
filter(variable %in% c("same_hh")) %>%
group_by(year_lab) %>%
summarize(estimate = sum(estimate, na.rm = T))
df_full %>%
filter(variable %in% c("same_hh", "total_hh_move")) %>%
select(-"moe") %>%
pivot_wider(id_cols = -c("variable"), names_from = "variable", values_from = "estimate") %>%
mutate(moved_hh = total_hh_move - same_hh) %>%
pivot_longer(cols = c("moved_hh", "same_hh")) %>%
group_by(year_lab, name) %>%
summarize(estimate = sum(value, na.rm = T)) %>%
group_by(year_lab) %>%
mutate(per = estimate * 100 / sum(estimate, na.rm = T)) %>%
ungroup() %>%
mutate(var_lab = case_when(name == "same_hh" ~ "Same house 1 year ago",
name == "moved_hh" ~ "Moved since 1 year ago",
TRUE ~ NA_character_)) %>%
ggplot(aes(year_lab, per, fill = var_lab)) +
geom_col() +
labs(x = "ACS 5-Year Survey",
y = "Percent of all households",
fill = "") +
geom_text(aes(label = str_c(round(per), "%")), position = "stack",
vjust = 1.1, color = "white") +
theme_classic() +
scale_fill_manual(values = colors)
ggsave(path("02_output", "movement.png"))
=======
border_right = TRUE,
bold = TRUE)
}
}
df_sub %>%
create_table() %>%
gsub("\\\\hline", "\\\\hlineB\\{4\\}", .) %>%
sub("\\|c\\|", "V\\{4\\}c\\|", .) %>%
gsub("\\\\cellcolor\\[HTML\\]\\{B4C6E7\\}\\{\\\\textbf\\{\\\\textbf\\{\\}\\}\\}",
"\\\\textbf{\\\\textbf\\{\\}\\}", .) %>%
sub("c\\|\\}\\{\\\\textbf\\{M1-1", "cV\\{4\\}\\}\\{\\\\textbf\\{M1-1", .) %>%
sub("begin\\{tabular\\}\\[t\\]\\{\\|", "begin\\{tabular\\}\\[t\\]\\{V\\{4\\}", .) %>%
sub("p\\{4.5em\\}\\|\\}", "p\\{5em\\}V\\{4\\}\\}", .)
library(tidyverse)
library(tidycensus)
library(fs)
library(DBI)
library(dbplyr)
library(RPostgres)
library(knitr)
library(kableExtra)
con <- dbConnect(Postgres(),
user = "furmandata",
password = rstudioapi::askForPassword(),
host = "fcdata.c7h93yqbqnvu.us-east-1.rds.amazonaws.com",
port = 5432,
dbname = "fcdata",
bigint = "integer"
)
source("../99_common.R")
df_sub %>%
create_table() %>%
gsub("\\\\hline", "\\\\hlineB\\{4\\}", .) %>%
sub("\\|c\\|", "V\\{4\\}c\\|", .) %>%
gsub("\\\\cellcolor\\[HTML\\]\\{B4C6E7\\}\\{\\\\textbf\\{\\\\textbf\\{\\}\\}\\}",
"\\\\textbf{\\\\textbf\\{\\}\\}", .) %>%
sub("c\\|\\}\\{\\\\textbf\\{M1-1", "cV\\{4\\}\\}\\{\\\\textbf\\{M1-1", .) %>%
sub("begin\\{tabular\\}\\[t\\]\\{\\|", "begin\\{tabular\\}\\[t\\]\\{V\\{4\\}", .) %>%
sub("p\\{4.5em\\}\\|\\}", "p\\{5em\\}V\\{4\\}\\}", .)
create_table <- function(df, v = 1) {
zone_cat <- df %>%
arrange(landuse2, zonedist1) %>%
pull(zonedist1) %>%
unique()
zone_cols <- zone_cat %>%
map(~c(str_c("numlots_", .), str_c("per_numlots_", .))) %>%
unlist()
df1 <- df %>%
group_by(landuse2, zonedist1) %>%
filter(!is.na(landuse2)) %>%
summarize(numlots = n_distinct(bbl)) %>%
group_by(zonedist1) %>%
mutate(per_numlots = round(numlots * 100 / sum(numlots, na.rm = T), 1)) %>%
mutate(across(starts_with("per_"), ~str_c(., "%"))) %>%
pivot_wider(names_from = "zonedist1", values_from = c("numlots", "per_numlots")) %>%
mutate(cat = "Land Use") %>%
select(cat, landuse2, all_of(zone_cols))
df2 <- df %>%
group_by(zonedist1) %>%
filter(!is.na(landuse2)) %>%
summarize(across(c(lotunutilized, lotutilized), .fns = lst(sum,
mean), na.rm = T)) %>%
pivot_longer(-zonedist1) %>%
mutate(landuse2 = if_else(str_detect(name, "lotunutilized"),
"Unutilized", "Utilized"),
cat = "Utilization",
type = if_else(str_detect(name, "sum"), "numlots", "per_numlots")) %>%
pivot_wider(id_cols = c("cat", "landuse2"), names_from = c("type","zonedist1"),
values_from = c("value")) %>%
mutate(across(starts_with("per_numlots"), ~round(. * 100 / sum(., na.rm = T), 1))) %>%
mutate(across(starts_with("per_"), ~str_c(., "%")))
df3 <- df %>%
group_by(zonedist1) %>%
summarize(numlots = n_distinct(bbl)) %>%
ungroup() %>%
mutate(per_numlots = "100.0%") %>%
pivot_wider(names_from = "zonedist1", values_from = c("numlots", "per_numlots")) %>%
mutate(cat = "",
landuse2 = "Grand Total") %>%
select(cat, landuse2, all_of(zone_cols))
if (v == 1) {
sel_cols <- 1:6
} else {
sel_cols <- 7:10
}
tbl_exp <- df1 %>%
bind_rows(df2, df3)  %>%
mutate(across(starts_with("numlots"), ~if_else(is.na(.), as.double(0), as.double(.)))) %>%
mutate(across(starts_with("numlots"), ~scales::comma(., accuracy = 1))) %>%
mutate(across(starts_with("per_numlots"), ~if_else(is.na(.), "0%", .))) %>%
select(cat, landuse2, zone_cols[sel_cols]) %>%
kbl(align=c(rep('l',times=length(sel_cols) + 1)), format = "latex",
col.names = c(" ", "Category",
rep(c("Count of Lots", "Share of Lots"), ((length(sel_cols))/2)))) %>%
kable_styling(position = "left",
latex_options = c("hold_position")) %>%
column_spec(1, width = "7em", bold = TRUE, border_left = TRUE) %>%
column_spec(2, width = "10em") %>%
column_spec(3:(length(sel_cols) + 1), width = "5em") %>%
column_spec(length(sel_cols) + 2, width = "4.5em", border_right = TRUE) %>%
collapse_rows(columns = 1) %>%
row_spec(0, bold = TRUE) %>%
gsub("\\\\cline\\{3", "\\\\cline\\{1", .) %>%
row_spec(7, background = "#B4C6E7", bold = TRUE)
val1 <- zone_cat[[1]]
val2 <- zone_cat[[2]]
val3 <- zone_cat[[3]]
val4 <- zone_cat[[4]]
val5 <- zone_cat[[5]]
stopifnot(length(zone_cat)==5)
if (v == 1) {
cols <- c(1, 1, 2, 2, 2)
names(cols) <- c(" ", "Zoning Code", zone_cat[1:3])
tbl_exp %>%
add_header_above(c(" " = 1, "Zoning Code" = 1,
val1 = 2, val2 = 2, val3 = 2),
border_left = TRUE,
border_right = TRUE,
bold = TRUE)
} else {
tbl_exp %>%
add_header_above(c(" " = 1, "Zoning Code" = 1,
val4 = 2, val5 = 2),
border_left = TRUE,
border_right = TRUE,
bold = TRUE)
}
}
df_sub %>%
create_table() %>%
gsub("\\\\hline", "\\\\hlineB\\{4\\}", .) %>%
sub("\\|c\\|", "V\\{4\\}c\\|", .) %>%
gsub("\\\\cellcolor\\[HTML\\]\\{B4C6E7\\}\\{\\\\textbf\\{\\\\textbf\\{\\}\\}\\}",
"\\\\textbf{\\\\textbf\\{\\}\\}", .) %>%
sub("c\\|\\}\\{\\\\textbf\\{M1-1", "cV\\{4\\}\\}\\{\\\\textbf\\{M1-1", .) %>%
sub("begin\\{tabular\\}\\[t\\]\\{\\|", "begin\\{tabular\\}\\[t\\]\\{V\\{4\\}", .) %>%
sub("p\\{4.5em\\}\\|\\}", "p\\{5em\\}V\\{4\\}\\}", .)
# Important link: http://maps.nyc.gov/doitt/nycitymap/
sel_tracts <- c("366", "364",
"362", "360.01",
"360.02", "610.02",
"610.04", "610.03")
df <- tbl(con, "mappluto_21v3") %>%
filter((ct2010 %in% sel_tracts) & borough == "BK") %>%
as.data.frame()
stopifnot(length(unique(df$ct2010)) == 8)
lu_cat <- str_pad(1:11, width = 2, pad = "0", "left")
lu_cat_new <- c(rep("Residential", 4), "Commercial", rep("Manufacturing", 2),
"Commercial", "Other", "Commercial", "Other")
df_sub <- df %>%
# recode land use
mutate(landuse2 = lu_cat_new[match(landuse, lu_cat)])
df_sub %>%
tablist_qc(landuse, landuse2)
df_sub <- df_sub %>%
mutate(zonedist = str_sub(zonedist1, 1, 1),
commarea = rowSums(select(., c("officearea", "retailarea",
"garagearea", "strgearea",
"otherarea")), na.rm = T)) %>%
rowwise() %>%
mutate(area_allowed = if_else(zonedist == "R",
residfar * lotarea,
commfar * lotarea),
area_allowed_sp = if_else(is.na(spdist1), 0,
max(residfar, commfar, na.rm = T) * lotarea),
max_area_allow = if_else(is.na(spdist1), area_allowed, area_allowed_sp),
unutilized_res = if_else(is.na(spdist1), max(area_allowed - resarea,
0, na.rm = T), 0),
unutilized_comm_man = if_else(is.na(spdist1),
max(area_allowed - commarea - factryarea,
0, na.rm = T), 0),
unutilized_sp = if_else(is.na(spdist1), 0,
max(area_allowed_sp - resarea - commarea - factryarea,
0, na.rm = T)),
total_unutilized = case_when(!is.na(spdist1) ~ unutilized_sp,
zonedist == "R" ~ unutilized_res,
TRUE ~ unutilized_comm_man),
utilized = bldgarea,
lotunutilized = if_else(total_unutilized > 0 & !is.na(total_unutilized), 1, 0),
lotutilized = if_else(lotunutilized == 1, 0, 1)) %>%
ungroup()
df_sub %>%
tablist_qc(zonedist, zonedist1)
df_sub %>%
select(c(zonedist, total_unutilized, utilized, max_area_allow))
df_sub %>%
select(c(unutilized_res, area_allowed, resarea)) %>%
mutate(check = area_allowed - resarea)
df_sub %>%
select(c(unutilized_comm_man, area_allowed, commarea, factryarea)) %>%
filter(commarea > 0)
df_sub %>%
select(c(area_allowed, residfar, lotarea, zonedist)) %>%
rowwise() %>%
mutate(check = residfar * lotarea)
df_sub %>%
filter(max_area_allow < utilized) %>%
mutate(check = residfar * lotarea) %>%
select("zonedist1", "bldgarea", "residfar", "lotarea", "max_area_allow", "unutilized_res",  "resarea", check, "yearbuilt", matches("area"))
df_sub %>%
tablist_qc(zonedist1)
create_table <- function(df, v = 1) {
zone_cat <- df %>%
arrange(landuse2, zonedist1) %>%
pull(zonedist1) %>%
unique()
zone_cols <- zone_cat %>%
map(~c(str_c("numlots_", .), str_c("per_numlots_", .))) %>%
unlist()
df1 <- df %>%
group_by(landuse2, zonedist1) %>%
filter(!is.na(landuse2)) %>%
summarize(numlots = n_distinct(bbl)) %>%
group_by(zonedist1) %>%
mutate(per_numlots = round(numlots * 100 / sum(numlots, na.rm = T), 1)) %>%
mutate(across(starts_with("per_"), ~str_c(., "%"))) %>%
pivot_wider(names_from = "zonedist1", values_from = c("numlots", "per_numlots")) %>%
mutate(cat = "Land Use") %>%
select(cat, landuse2, all_of(zone_cols))
df2 <- df %>%
group_by(zonedist1) %>%
filter(!is.na(landuse2)) %>%
summarize(across(c(lotunutilized, lotutilized), .fns = lst(sum,
mean), na.rm = T)) %>%
pivot_longer(-zonedist1) %>%
mutate(landuse2 = if_else(str_detect(name, "lotunutilized"),
"Unutilized", "Utilized"),
cat = "Utilization",
type = if_else(str_detect(name, "sum"), "numlots", "per_numlots")) %>%
pivot_wider(id_cols = c("cat", "landuse2"), names_from = c("type","zonedist1"),
values_from = c("value")) %>%
mutate(across(starts_with("per_numlots"), ~round(. * 100 / sum(., na.rm = T), 1))) %>%
mutate(across(starts_with("per_"), ~str_c(., "%")))
df3 <- df %>%
group_by(zonedist1) %>%
summarize(numlots = n_distinct(bbl)) %>%
ungroup() %>%
mutate(per_numlots = "100.0%") %>%
pivot_wider(names_from = "zonedist1", values_from = c("numlots", "per_numlots")) %>%
mutate(cat = "",
landuse2 = "Grand Total") %>%
select(cat, landuse2, all_of(zone_cols))
if (v == 1) {
sel_cols <- 1:6
} else {
sel_cols <- 7:10
}
tbl_exp <- df1 %>%
bind_rows(df2, df3)  %>%
mutate(across(starts_with("numlots"), ~if_else(is.na(.), as.double(0), as.double(.)))) %>%
mutate(across(starts_with("numlots"), ~scales::comma(., accuracy = 1))) %>%
mutate(across(starts_with("per_numlots"), ~if_else(is.na(.), "0%", .))) %>%
select(cat, landuse2, zone_cols[sel_cols]) %>%
kbl(align=c(rep('l',times=length(sel_cols) + 1)), format = "latex",
col.names = c(" ", "Category",
rep(c("Count of Lots", "Share of Lots"), ((length(sel_cols))/2)))) %>%
kable_styling(position = "left",
latex_options = c("hold_position")) %>%
column_spec(1, width = "7em", bold = TRUE, border_left = TRUE) %>%
column_spec(2, width = "10em") %>%
column_spec(3:(length(sel_cols) + 1), width = "5em") %>%
column_spec(length(sel_cols) + 2, width = "4.5em", border_right = TRUE) %>%
collapse_rows(columns = 1) %>%
row_spec(0, bold = TRUE) %>%
gsub("\\\\cline\\{3", "\\\\cline\\{1", .) %>%
row_spec(7, background = "#B4C6E7", bold = TRUE)
val1 <- zone_cat[[1]]
val2 <- zone_cat[[2]]
val3 <- zone_cat[[3]]
val4 <- zone_cat[[4]]
val5 <- zone_cat[[5]]
stopifnot(length(zone_cat)==5)
if (v == 1) {
cols <- c(1, 1, 2, 2, 2)
names(cols) <- c(" ", "Zoning Code", zone_cat[1:3])
tbl_exp %>%
add_header_above(c(" " = 1, "Zoning Code" = 1,
val1 = 2, val2 = 2, val3 = 2),
border_left = TRUE,
border_right = TRUE,
bold = TRUE)
} else {
tbl_exp %>%
add_header_above(c(" " = 1, "Zoning Code" = 1,
val4 = 2, val5 = 2),
border_left = TRUE,
border_right = TRUE,
bold = TRUE)
}
}
df_sub %>%
create_table() %>%
gsub("\\\\hline", "\\\\hlineB\\{4\\}", .) %>%
sub("\\|c\\|", "V\\{4\\}c\\|", .) %>%
gsub("\\\\cellcolor\\[HTML\\]\\{B4C6E7\\}\\{\\\\textbf\\{\\\\textbf\\{\\}\\}\\}",
"\\\\textbf{\\\\textbf\\{\\}\\}", .) %>%
sub("c\\|\\}\\{\\\\textbf\\{M1-1", "cV\\{4\\}\\}\\{\\\\textbf\\{M1-1", .) %>%
sub("begin\\{tabular\\}\\[t\\]\\{\\|", "begin\\{tabular\\}\\[t\\]\\{V\\{4\\}", .) %>%
sub("p\\{4.5em\\}\\|\\}", "p\\{5em\\}V\\{4\\}\\}", .)
df_sub %>%
create_table(v = 2)  %>%
gsub("\\\\hline", "\\\\hlineB\\{4\\}", .) %>%
sub("\\|c\\|", "V\\{4\\}c\\|", .) %>%
gsub("\\\\cellcolor\\[HTML\\]\\{B4C6E7\\}\\{\\\\textbf\\{\\\\textbf\\{\\}\\}\\}",
"\\\\textbf{\\\\textbf\\{\\}\\}", .) %>%
sub("c\\|\\}\\{\\\\textbf\\{M1-1", "cV\\{4\\}\\}\\{\\\\textbf\\{M1-1", .) %>%
sub("begin\\{tabular\\}\\[t\\]\\{\\|", "begin\\{tabular\\}\\[t\\]\\{V\\{4\\}", .) %>%
sub("p\\{4.5em\\}\\|\\}", "p\\{5em\\}V\\{4\\}\\}", .)
create_table <- function(df, v = 1) {
zone_cat <- df %>%
arrange(landuse2, zonedist1) %>%
pull(zonedist1) %>%
unique()
zone_cols <- zone_cat %>%
map(~c(str_c("numlots_", .), str_c("per_numlots_", .))) %>%
unlist()
df1 <- df %>%
group_by(landuse2, zonedist1) %>%
filter(!is.na(landuse2)) %>%
summarize(numlots = n_distinct(bbl)) %>%
group_by(zonedist1) %>%
mutate(per_numlots = round(numlots * 100 / sum(numlots, na.rm = T), 1)) %>%
mutate(across(starts_with("per_"), ~str_c(., "%"))) %>%
pivot_wider(names_from = "zonedist1", values_from = c("numlots", "per_numlots")) %>%
mutate(cat = "Land Use") %>%
select(cat, landuse2, all_of(zone_cols))
df2 <- df %>%
group_by(zonedist1) %>%
filter(!is.na(landuse2)) %>%
summarize(across(c(lotunutilized, lotutilized), .fns = lst(sum,
mean), na.rm = T)) %>%
pivot_longer(-zonedist1) %>%
mutate(landuse2 = if_else(str_detect(name, "lotunutilized"),
"Unutilized", "Utilized"),
cat = "Utilization",
type = if_else(str_detect(name, "sum"), "numlots", "per_numlots")) %>%
pivot_wider(id_cols = c("cat", "landuse2"), names_from = c("type","zonedist1"),
values_from = c("value")) %>%
mutate(across(starts_with("per_numlots"), ~round(. * 100 / sum(., na.rm = T), 1))) %>%
mutate(across(starts_with("per_"), ~str_c(., "%")))
df3 <- df %>%
group_by(zonedist1) %>%
summarize(numlots = n_distinct(bbl)) %>%
ungroup() %>%
mutate(per_numlots = "100.0%") %>%
pivot_wider(names_from = "zonedist1", values_from = c("numlots", "per_numlots")) %>%
mutate(cat = "",
landuse2 = "Grand Total") %>%
select(cat, landuse2, all_of(zone_cols))
if (v == 1) {
sel_cols <- 1:6
} else {
sel_cols <- 7:10
}
tbl_exp <- df1 %>%
bind_rows(df2, df3)  %>%
mutate(across(starts_with("numlots"), ~if_else(is.na(.), as.double(0), as.double(.)))) %>%
mutate(across(starts_with("numlots"), ~scales::comma(., accuracy = 1))) %>%
mutate(across(starts_with("per_numlots"), ~if_else(is.na(.), "0%", .))) %>%
select(cat, landuse2, zone_cols[sel_cols]) %>%
kbl(align=c(rep('l',times=length(sel_cols) + 1)), format = "latex",
col.names = c(" ", "Category",
rep(c("Count of Lots", "Share of Lots"), ((length(sel_cols))/2)))) %>%
kable_styling(position = "left",
latex_options = c("hold_position")) %>%
column_spec(1, width = "7em", bold = TRUE, border_left = TRUE) %>%
column_spec(2, width = "10em") %>%
column_spec(3:(length(sel_cols) + 1), width = "5em") %>%
column_spec(length(sel_cols) + 2, width = "4.5em", border_right = TRUE) %>%
collapse_rows(columns = 1) %>%
row_spec(0, bold = TRUE) %>%
gsub("\\\\cline\\{3", "\\\\cline\\{1", .) %>%
row_spec(7, background = "#B4C6E7", bold = TRUE)
val1 <- zone_cat[[1]]
val2 <- zone_cat[[2]]
val3 <- zone_cat[[3]]
val4 <- zone_cat[[4]]
val5 <- zone_cat[[5]]
stopifnot(length(zone_cat)==5)
if (v == 1) {
cols <- c(1, 1, 2, 2, 2)
names(cols) <- c(" ", "Zoning Code", zone_cat[1:3])
tbl_exp %>%
add_header_above(cols,
border_left = TRUE,
border_right = TRUE,
bold = TRUE)
} else {
tbl_exp %>%
add_header_above(c(" " = 1, "Zoning Code" = 1,
val4 = 2, val5 = 2),
border_left = TRUE,
border_right = TRUE,
bold = TRUE)
}
}
df_sub %>%
create_table() %>%
gsub("\\\\hline", "\\\\hlineB\\{4\\}", .) %>%
sub("\\|c\\|", "V\\{4\\}c\\|", .) %>%
gsub("\\\\cellcolor\\[HTML\\]\\{B4C6E7\\}\\{\\\\textbf\\{\\\\textbf\\{\\}\\}\\}",
"\\\\textbf{\\\\textbf\\{\\}\\}", .) %>%
sub("c\\|\\}\\{\\\\textbf\\{M1-1", "cV\\{4\\}\\}\\{\\\\textbf\\{M1-1", .) %>%
sub("begin\\{tabular\\}\\[t\\]\\{\\|", "begin\\{tabular\\}\\[t\\]\\{V\\{4\\}", .) %>%
sub("p\\{4.5em\\}\\|\\}", "p\\{5em\\}V\\{4\\}\\}", .)
create_table <- function(df, v = 1) {
zone_cat <- df %>%
arrange(landuse2, zonedist1) %>%
pull(zonedist1) %>%
unique()
zone_cols <- zone_cat %>%
map(~c(str_c("numlots_", .), str_c("per_numlots_", .))) %>%
unlist()
df1 <- df %>%
group_by(landuse2, zonedist1) %>%
filter(!is.na(landuse2)) %>%
summarize(numlots = n_distinct(bbl)) %>%
group_by(zonedist1) %>%
mutate(per_numlots = round(numlots * 100 / sum(numlots, na.rm = T), 1)) %>%
mutate(across(starts_with("per_"), ~str_c(., "%"))) %>%
pivot_wider(names_from = "zonedist1", values_from = c("numlots", "per_numlots")) %>%
mutate(cat = "Land Use") %>%
select(cat, landuse2, all_of(zone_cols))
df2 <- df %>%
group_by(zonedist1) %>%
filter(!is.na(landuse2)) %>%
summarize(across(c(lotunutilized, lotutilized), .fns = lst(sum,
mean), na.rm = T)) %>%
pivot_longer(-zonedist1) %>%
mutate(landuse2 = if_else(str_detect(name, "lotunutilized"),
"Unutilized", "Utilized"),
cat = "Utilization",
type = if_else(str_detect(name, "sum"), "numlots", "per_numlots")) %>%
pivot_wider(id_cols = c("cat", "landuse2"), names_from = c("type","zonedist1"),
values_from = c("value")) %>%
mutate(across(starts_with("per_numlots"), ~round(. * 100 / sum(., na.rm = T), 1))) %>%
mutate(across(starts_with("per_"), ~str_c(., "%")))
df3 <- df %>%
group_by(zonedist1) %>%
summarize(numlots = n_distinct(bbl)) %>%
ungroup() %>%
mutate(per_numlots = "100.0%") %>%
pivot_wider(names_from = "zonedist1", values_from = c("numlots", "per_numlots")) %>%
mutate(cat = "",
landuse2 = "Grand Total") %>%
select(cat, landuse2, all_of(zone_cols))
if (v == 1) {
sel_cols <- 1:6
} else {
sel_cols <- 7:10
}
tbl_exp <- df1 %>%
bind_rows(df2, df3)  %>%
mutate(across(starts_with("numlots"), ~if_else(is.na(.), as.double(0), as.double(.)))) %>%
mutate(across(starts_with("numlots"), ~scales::comma(., accuracy = 1))) %>%
mutate(across(starts_with("per_numlots"), ~if_else(is.na(.), "0%", .))) %>%
select(cat, landuse2, zone_cols[sel_cols]) %>%
kbl(align=c(rep('l',times=length(sel_cols) + 1)), format = "latex",
col.names = c(" ", "Category",
rep(c("Count of Lots", "Share of Lots"), ((length(sel_cols))/2)))) %>%
kable_styling(position = "left",
latex_options = c("hold_position")) %>%
column_spec(1, width = "7em", bold = TRUE, border_left = TRUE) %>%
column_spec(2, width = "10em") %>%
column_spec(3:(length(sel_cols) + 1), width = "5em") %>%
column_spec(length(sel_cols) + 2, width = "4.5em", border_right = TRUE) %>%
collapse_rows(columns = 1) %>%
row_spec(0, bold = TRUE) %>%
gsub("\\\\cline\\{3", "\\\\cline\\{1", .) %>%
row_spec(7, background = "#B4C6E7", bold = TRUE)
val1 <- zone_cat[[1]]
val2 <- zone_cat[[2]]
val3 <- zone_cat[[3]]
val4 <- zone_cat[[4]]
val5 <- zone_cat[[5]]
stopifnot(length(zone_cat)==5)
if (v == 1) {
cols <- c(1, 1, 2, 2, 2)
names(cols) <- c(" ", "Zoning Code", zone_cat[1:3])
tbl_exp %>%
add_header_above(cols,
border_left = TRUE,
border_right = TRUE,
bold = TRUE)
} else {
cols <- c(1, 1, 2, 2)
names(cols) <- c(" ", "Zoning Code", zone_cat[4:5])
tbl_exp %>%
add_header_above(cols,
border_left = TRUE,
border_right = TRUE,
bold = TRUE)
}
}
df_sub %>%
create_table() %>%
gsub("\\\\hline", "\\\\hlineB\\{4\\}", .) %>%
sub("\\|c\\|", "V\\{4\\}c\\|", .) %>%
gsub("\\\\cellcolor\\[HTML\\]\\{B4C6E7\\}\\{\\\\textbf\\{\\\\textbf\\{\\}\\}\\}",
"\\\\textbf{\\\\textbf\\{\\}\\}", .) %>%
sub("c\\|\\}\\{\\\\textbf\\{M1-1", "cV\\{4\\}\\}\\{\\\\textbf\\{M1-1", .) %>%
sub("begin\\{tabular\\}\\[t\\]\\{\\|", "begin\\{tabular\\}\\[t\\]\\{V\\{4\\}", .) %>%
sub("p\\{4.5em\\}\\|\\}", "p\\{5em\\}V\\{4\\}\\}", .)
df_sub %>%
create_table(v = 2)  %>%
gsub("\\\\hline", "\\\\hlineB\\{4\\}", .) %>%
sub("\\|c\\|", "V\\{4\\}c\\|", .) %>%
gsub("\\\\cellcolor\\[HTML\\]\\{B4C6E7\\}\\{\\\\textbf\\{\\\\textbf\\{\\}\\}\\}",
"\\\\textbf{\\\\textbf\\{\\}\\}", .) %>%
sub("c\\|\\}\\{\\\\textbf\\{M1-1", "cV\\{4\\}\\}\\{\\\\textbf\\{M1-1", .) %>%
sub("begin\\{tabular\\}\\[t\\]\\{\\|", "begin\\{tabular\\}\\[t\\]\\{V\\{4\\}", .) %>%
sub("p\\{4.5em\\}\\|\\}", "p\\{5em\\}V\\{4\\}\\}", .)
>>>>>>> c058bd84d06683827e7a290d87ba40b13f28bde9
